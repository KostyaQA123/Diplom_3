{"name": "Проверка появления номера заказа в разделе В работе после его оформления", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Not found ('xpath', '//h2[text()=\"9999\"]')", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x000001665D7F0B50>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"815d9479-f6f3-4d98-97c1-bdf1a23e8153\")>, login = None\n\n    @allure.title('Проверка появления номера заказа в разделе В работе после его оформления')\n    def test_order_in_progress_after_checkout(self, driver, login):\n        main_page = MainPage(driver)\n        feed_page = OrderFeed(driver)\n        main_page.find_visible_element_located(MainPageLocators.CONSTRUCTOR_TITLE)\n        main_page.add_ingredient_in_order()\n        main_page.click_make_order()\n>       main_page.find_invisible_element_located(MainPageLocators.DEFAULT_ORDER)\n\ntests\\test_order_feed.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:35: in find_invisible_element_located\n    return WebDriverWait(self.driver, time).until(EC.invisibility_of_element_located(locator), message=f'Not found {locator}')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"815d9479-f6f3-4d98-97c1-bdf1a23e8153\")>, method = <function invisibility_of_element_located.<locals>._predicate at 0x000001665DEAC680>\nmessage = 'Not found (\\'xpath\\', \\'//h2[text()=\"9999\"]\\')'\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Not found ('xpath', '//h2[text()=\"9999\"]')\n\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "steps": [{"name": "Добавить ингредиент в корзину заказа", "status": "passed", "start": 1724958294123, "stop": 1724958294707}, {"name": "Нажать на кнопку Оформить заказ", "status": "passed", "start": 1724958294707, "stop": 1724958294938}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1724958294063, "stop": 1724958315405, "uuid": "c98c29e6-5201-42fe-ad28-53e0afe00093", "historyId": "cfb3915062c9749256f1bc349942abe0", "testCaseId": "bde625975a0aec118501f639d2c2c8fe", "fullName": "tests.test_order_feed.TestOrderFeed#test_order_in_progress_after_checkout", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "LAPTOP-HMKBQSJN"}, {"name": "thread", "value": "22132-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}